# Nginx configuration for IDS Web UI
# This configuration sets up a reverse proxy for the IDS Web UI application
# with WebSocket support and SSL/TLS termination

# HTTP server - redirects all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ids.example.com;  # Replace with your domain

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server - main configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ids.example.com;  # Replace with your domain

    # SSL Certificate Configuration
    # Replace these paths with your actual certificate paths
    ssl_certificate /etc/ssl/certs/ids-webui.crt;
    ssl_certificate_key /etc/ssl/private/ids-webui.key;

    # SSL Security Settings (Mozilla Intermediate Configuration)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Logging
    access_log /var/log/nginx/ids-webui-access.log;
    error_log /var/log/nginx/ids-webui-error.log;

    # Client body size limit (for configuration uploads)
    client_max_body_size 10M;

    # Root location - proxy to Flask application
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # WebSocket support for Socket.IO
    location /socket.io/ {
        proxy_pass http://127.0.0.1:5000/socket.io/;
        proxy_http_version 1.1;
        
        # WebSocket upgrade headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket timeouts (longer for persistent connections)
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # Disable buffering for WebSocket
        proxy_buffering off;
    }

    # Static files caching (optional optimization)
    location /static/ {
        proxy_pass http://127.0.0.1:5000/static/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Cache static assets
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint (optional)
    location /health {
        proxy_pass http://127.0.0.1:5000/api/status;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
}

# Configuration Notes:
# 1. Replace 'ids.example.com' with your actual domain name
# 2. Update SSL certificate paths to match your certificate locations
# 3. Adjust the backend port (5000) if your Flask app runs on a different port
# 4. Consider using Let's Encrypt for free SSL certificates
# 5. Test configuration with: sudo nginx -t
# 6. Reload Nginx after changes: sudo systemctl reload nginx
